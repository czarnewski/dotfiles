" Vim Run Commands file
" Author: Paulo Czarnewski
" Special: Erik Fasterius

" Backups: {{{1


" General Key Mappings: {{{1
"Set Leaders:
let maplocalleader = ','
let mapleader = '\'

"Re-source VIMRC
nmap <Leader>v :source $MYVIMRC <CR>

set backspace=indent,eol,start

" Plugins: {{{1

let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin('~/.vim/plugged')

Plug 'roxma/vim-hug-neovim-rpc'

Plug 'jalvesaq/Nvim-R'
Plug 'ncm2/ncm2'
Plug 'bagrat/vim-buffet'
Plug 'roxma/nvim-yarp'
Plug 'gaalcaras/ncm-R'
Plug 'preservim/nerdtree'
Plug 'Raimondi/delimitMate'
Plug 'patstockwell/vim-monokai-tasty'
Plug 'itchyny/lightline.vim'
Plug 'ncm2/ncm2-path'
Plug 'ncm2/ncm2-bufword'
Plug 'ncm2/ncm2-ultisnips'
Plug 'SirVer/ultisnips'

" Plug 'Valloric/YouCompleteMe',         { 'as': 'you-complete-me', 'commit': '14f0d3968c43be7edde15aa67bc600c3998cae16', 'do': 'python3 install.py' }

call plug#end()


" NERD Tree
map <localleader>nn :NERDTreeToggle<CR>                  " Toggle NERD tree.

" enable ncm2 for all buffers
autocmd BufEnter * call ncm2#enable_for_buffer()
set completeopt=noinsert,menuone,noselect           " :help Ncm2PopupOpen for more

" suppress the annoying 'match x of y', 'The only match' and 'Pattern not
" found' messages
set shortmess+=c

" When the <Enter> key is pressed while the popup menu is visible, it only
" hides the menu. Use this mapping to close the menu and also start a new
" line.
" inoremap <expr> <CR> (pumvisible() ? "\<c-y>\<cr>" : "\<CR>")"


" Use <TAB> to select the popup menu:
" inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
" inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

let R_close_term = 1

let R_assign = 2

let R_start_libs = 'base,stats,graphics,grDevices,utils,methods'
let R_auto_start = 0

let R_auto_omni = ["r",  "rmd", "rnoweb", "rhelp", "rrst"]

let R_tmpdir = '~/opt/dev/shm/R_tmpdir'
let R_compldir = '~/opt/.cache/Nvim-R'

" Miscellaneous: {{{1
" Add line numbers
set relativenumber
set number

" Add background highlight to current line
set cursorline

" Wrap lines at 80 characters
set textwidth=80 
set formatoptions+=t

" Use UTF-8 encoding
set encoding=utf-8


map <leader>nt :tabnew<cr>    " To create a new tab.
map <leader>to :tabonly<cr>     " To close all other tabs (show only the current tab).
map <leader>tc :tabclose<cr>    " To close the current tab.
map <leader>tm :tabmove<cr>     " To move the current tab to next position.
map <leader>tn :tabn<cr>        " To swtich to next tab.
map <leader>tp :tabp<cr>        " To switch to previous tab.

" Use the same indentation as currently on for new lines

" Syntax Highlighting: {{{1
syntax enable
colorscheme jellybeans
set background=dark

" Errors
set noerrorbells                " No annoying sound on errors.


" TAB settings: {{{1
set tabstop=2 " <TAB> is 2 spaces wide
set smarttab " To use smart tabs.
set autoindent " To copy indentation from current line 
set expandtab " <TAB is expanded to spaces
set shiftwidth=2 " Use 2 spaces when indenting with '>'

set foldmethod=marker
" filetype indent on
" filetype plugin indent on
set shiftwidth=2
set si
set ai

" Files & Backup
set nobackup                     " Turn off backup.
set nowb                         " Don't backup before overwriting a file.
set noswapfile                   " Don't create a swap file.
set ffs=unix,dos,mac             " Use Unix as the standard file type.

